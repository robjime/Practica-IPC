/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package practica2.vista.CompraBillete;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import practica2.modelo.ModeloRutas;
import practica2.modelo.Ruta;

/**
 *
 * @author jorgy
 */
public class VistaElegirViaje extends javax.swing.JFrame {
    private ModeloRutas modelo;
    private ControladorElegirViaje controladorElegirV;
    private VistaCompraBillete vistaCB;
  
    public boolean esFinDeSemana;
    
    // Método para obtener la fecha seleccionada del JCalendar
    public Calendar getCalendar() {
            Date fechaSeleccionada = vistaCB.obtenerFechaSeleccionada();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(fechaSeleccionada);
            return calendar;
    }
    
    public VistaElegirViaje() {
        initComponents();
        this.modelo = new ModeloRutas(); // Inicializa el modelo si aún no lo has hecho
        this.vistaCB = new VistaCompraBillete(); // Inicializa vistaCB si aún no lo has hecho
        this.controladorElegirV = new ControladorElegirViaje(this,vistaCB, modelo);
        this.controladorElegirV.inicializarRutas("src\\practica2\\vista/rutas.csv");
        
         // Agregar un listener al JCalendar para detectar cambios en la fecha seleccionada
        vistaCB.getJCalendar().addPropertyChangeListener((java.beans.PropertyChangeEvent evt) -> {
        // Obtener la fecha seleccionada del jCalendar en VistaCompraBillete
        Date fechaSeleccionada = vistaCB.obtenerFechaSeleccionada();
        
        // Crear un objeto Calendar y establecer la fecha seleccionada
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(fechaSeleccionada);
        
        // Verificar si la fecha seleccionada es fin de semana
        int diaSemana = calendar.get(Calendar.DAY_OF_WEEK);
        esFinDeSemana = (diaSemana == Calendar.SATURDAY || diaSemana == Calendar.SUNDAY);
        
        // Actualizar la lista de rutas disponibles
        controladorElegirV.buscarRutasDisponibles();
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Lista_Trenes = new javax.swing.JList<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setPreferredSize(new java.awt.Dimension(612, 420));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ELIGE TU VIAJE");

        Lista_Trenes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(Lista_Trenes);

        jCheckBox1.setText("Mascota");
        jCheckBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Bicicleta");
        jCheckBox2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton1.setText("< Volver");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Siguiente >");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jCheckBox1)
                        .addGap(147, 147, 147)
                        .addComponent(jCheckBox2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(25, 25, 25))
        );

        getContentPane().add(jPanel1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        controladorElegirV.PasoAnterior();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        controladorElegirV.PasoSiguiente();
    }//GEN-LAST:event_jButton2ActionPerformed


    public void actualizarRutasDisponibles(ArrayList<Ruta> rutas){ //muestra las estaciones en la lista
    DefaultListModel<String> model = new DefaultListModel<>();
    rutas = modelo.getRutas();
    for (Ruta ruta : rutas) {
        // Separar el horario en múltiples líneas
        String[] horarios = (esFinDeSemana ? ruta.getHorarioFinSemana() : ruta.getHorarioSemana()).split(",");
        for (String horario : horarios) {
            // Agregar cada horario como una línea separada
            String item = "idRuta: " + ruta.getidRuta() +
                          " - Tiempo: " + ruta.getTiempo() +
                          " - Precio: " + ruta.getPrecio() +
                          " - Horario: " + horario.trim(); // Limpiar el horario de espacios en blanco
            model.addElement(item);
            System.out.println(item);
        }
    }
        Lista_Trenes.setModel(model);
    }

    
    public void ListaRutasDisponibles() {
        controladorElegirV.buscarRutasDisponibles(); // Llama al método del controlador para buscar rutas disponibles
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> Lista_Trenes;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
